#!/usr/bin/env bash
# ############################################################################
# # PATH: /opt/local/config/rc/bash               AUTHOR: Hoefkens.j@gmail.com
# # FILE: 311_history.conf                                 2023-04-04 09:33:40
# ############################################################################
#
# set -o xtrace
# set -o nounset
function bash_history() {
 	function HELP() {
        echo -e "\nUsage: bash_history [option]\n"
        echo -e "Options:"
        echo -e "  install\tCreate the necessary HISTDIRectories and files for the history tracking"
        echo -e "  clean\t\tRemove the current HISTSESSION's history and reset the command history"
        echo -e "  start\t\tStart a new HISTSESSION and begin tracking commands"
        echo -e "  stop\t\tStop the current HISTSESSION and stop tracking commands"
        echo -e "  show [--all]\tDisplay the command history, use --all to show all history"
        echo -e "  active\tList active history HISTSESSIONs"
        echo -e "  orphaned\tList orphaned history HISTSESSIONs"
        echo -e "  help\t\tDisplay this help message\n"
        echo -e "Example: bash_history start\n"
	}

	function install_fifo(){
		printf '%s...' "$1" 
		sudo rm -rfv "$1" 
		sudo mkfifo "$1"  
		sudo chmod 666 "$1"
		echo "DONE"
	}
	

	function history_install() {		
		#test for HISTDIRs/files and create them:
		echo "creating:"
		[[ ! -e $CACHE ]]   &&   printf '%s...' "$CACHE"   && mkHISTDIR -m777  "$CACHE" && echo "DONE"
		[[ ! -e $HISTDIR ]]     &&   printf '%s...' "$HISTDIR"     && mkHISTDIR -m777  "$HISTDIR"  && echo "DONE"
		[[ ! -e $HISTSYSFULL ]] &&   printf '%s...' "$HISTSYSFULL" && install -m 777 /dev/null "$HISTSYSFULL"  && echo "DONE" 	
		[[ ! -e $HISTSYSBOOt ]] &&   printf '%s...' "$HISTSYSBOOt" && install -m 777 /dev/null "$HISTSYSBOOt"  && echo "DONE"
		[[ ! -e $HISTSYSMETA ]] &&   printf '%s...' "$HISTSYSMETA" && install -m 777 /dev/null "$HISTSYSMETA"  && echo "DONE"
		# [[ ! -e $HISTSYSLAST ]] &&   install_fifo "$HISTSYSLAST"
		# [[ ! -e $HISTSYSUNIQ ]] &&   install_fifo "$HISTSYSUNIQ"

	}
	function history_update()	{

		# cat "$HISTSYSLAST" >> "$HISTSESSION" "$HISTSYSBOOt" "$HISTSYSFULL" $HISTSYSUNIQ
		# CHKSUM=$() md5sum 	<<< 
		builtin history -a "$HISTSYSLAST"
		builtin history -a "$HISTSYSFULL"
		builtin history -a "$HISTSESSION" 
		builtin history -c	
		cat "$HISTSYSFULL" "$HISTSYSBOOt" "$HISTSESSION" |tac  | awk '!seen[$0]++'  | tac > "$HISTFILE"
		echo "$META" >> "$HISTSYSMETA"
		cat "$HISTSYSLAST" >> $HISTFILE
 		builtin history -r "$HISTFILE"
 		echo "" > "$HISTSYSLAST" 
	}
	function history_meta() 	{

		#N                   #STAMP 		
		local dat usr hst pid tty
		pNR=$( cat "$HISTSYSFULL" |wc -l )
		NR=$((pNR+1))
		_date="$( date +%s )" 
		_user="$USER" 
		_host="$HOSTNAME" 
		_ppid="$$"
		_tty="$(tty)"
		_md5=$(cat "$HISTSYSLAST" ) 
		
		printf '%s\t\t%s\t\t%s\t\t%s\t\t' "$NR" "$_ppid" "$_date" "$_boot" 
		printf '%s\t\t%s\t\t%s\t\t%s\t\t' "$_host" "$_user" "$_tty" "$_shell" 
		printf '%s\t\t%s\n' 							"$PS1" "$1"
	}
	function history_start(){
		history_cleanup 
		[[ ! -e $HISTFILE ]] && install -m 777 /dev/null "$HISTFILE" 
		[[ ! -e $HISTSESSION ]] && install -m 777 /dev/null "$HISTSESSION" 

	}
	function history_cleanup (){
		cat "$HISTFILE" $HISTSESSION >> "$HISTDIR/$$.recovered"
		[[ -e $HISTFILE ]] && sudo trash "$HISTFILE" 
		[[ -e $HISTSESSION ]] && sudo trash "$HISTSESSION"
		[[ -e $HISTFILE ]] && sudo rm -rvf "$HISTFILE" 
		[[ -e $HISTSESSION ]] && sudo rm -rvf "$HISTSESSION"
	}
	function history_stop(){
		[[ -e $HISTFILE ]] && trash "$HISTFILE" 
		[[ -e $HISTSESSION ]] && trash "$HISTSESSION"
		history_cleanup
	}
	## HELPER FUNCTION if not on system:
	
	if [[ -z $(which batcat 2>/dev/null) ]]; then 
		function batcat () {
			local _cat _bat LANG STRING COLOR
			LANG="$1"
			shift 1
			STRING="$@"
			_cat=$( which "cat" )
			_bat=$( which "bat" )
			[[ -n "$_bat" ]] && printf '%s' "$@"  | $( printf '%s --%s --%s=%s' "$_bat" "plain" "language" "$LANG" ) 
			[[ -z $_bat ]] && echo $( printf '%s' "$@" ) | $( printf '%s' "$_cat"  ) 
		};
	fi	

	export BOOTSTAMP="$(uptime -s | tr -d '\-: ')" 
	export HISTSIZE=-1 
	export HISTFILESIZE="$HISTSIZE" 
	export HISTCONTROL=''
	export HISTPFIX="history"
	export HISTCACHE="/var/cache"
	export HISTDIR="${HISTCACHE}/history/bash"
	export HISTFILE="${HISTHISTDIR}/${HISTPFIX}.$$"
	export HISTSYSLAST="${HISTDIR}/system.last.${HISTPFIX}" #FIFO
	export HISTSYSBOOt="${HISTDIR}/system.boot.${BOOTSTAMP}"
	export HISTSYSFULL="${HISTDIR}/system.full.${HISTPFIX}"
	export HISTSYSUNIQ="${HISTDIR}/system.uniq.${HISTPFIX}" #FIFO
	export HISTSYSMETA="${HISTDIR}/system.meta.${HISTPFIX}"

HISTFILE="${HISTHISTDIR}/${HISTPFIX}.$$"
HISTSESSION="${HISTHISTDIR}/${HISTPFIX}.HISTSESSION.$$"
	FNC=${FUNCNAME[0]}
	case "$1" in
		install) history_install  &>/dev/null;;
		help) HELP  &>/dev/null;;
		start) history_start  &>/dev/null;;
		stop) history_stop  &>/dev/null;;
		update) history_update  &>/dev/null ;;
		uniq) shift && history_uniq "$@"  &>/dev/null ;;
		meta) history_meta "$@"  &>/dev/null ;;
		debug) set -o xtrace
	esac

}	

function HISTCLEANUP() {
  echo "Cleaning up HIST files..."
  bash_history stop
  sleep 0.1
}

function HISTUPDATE() {
	builtin history -a "$HISTSYSLAST"
	bash_history update 
}

function history(){
	bash_history show
	builtin history "$@"
}

trap HISTCLEANUP  EXIT
bash_history start &>/dev/null
echo $SHELL  &>/dev/null
bash_history update  &>/dev/null
[[ "${PROMPT_COMMAND}" != *"HISTUPDATE"* ]] && export PROMPT_COMMAND="HISTUPDATE ; ${PROMPT_COMMAND}"


